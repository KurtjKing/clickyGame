{"ast":null,"code":"import _classCallCheck from \"/Users/kurtking/working/clickyGame/clicky-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kurtking/working/clickyGame/clicky-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kurtking/working/clickyGame/clicky-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kurtking/working/clickyGame/clicky-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kurtking/working/clickyGame/clicky-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kurtking/working/clickyGame/clicky-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Card from \"./components/Card\";\nimport chars from \"./cards.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      chars: chars,\n      clickedChars: [],\n      score: 0,\n      topScore: 9,\n      status: \"\"\n    };\n\n    _this.shuffleScoreCard = function (id) {\n      chars.sort(function () {\n        return Math.random() - 0.5;\n      });\n\n      _this.setState({\n        chars: chars,\n        score: _this.state.score + 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    //shuffle the pup cards in the browser when clicked\n    // shuffleScoreCard = id => {\n    //   let clickedChars = this.state.clickedChars;\n    //   if(clickedChars.includes(id)){\n    //     this.setState({ clickedChars: [], score: 0, status:  \"Game Over! You lost. Click to play again!\" });\n    //     return;\n    //   }else{\n    //     clickedChars.push(id)\n    //     if(clickedChars.length === 9){\n    //       this.setState({score: 9, status: \"You Won! Great Job, Smartie! Click to play again!\", clickedChars: []});\n    //       console.log('You Win');\n    //       return;\n    //     }\n    //     this.setState({ chars, clickedChars, score: clickedChars.length, status: \" \" });\n    //     for (let i = chars.length - 1; i > 0; i--) {\n    //       let j = Math.floor(Math.random() * (i + 1));\n    //       [chars[i], chars[j]] = [chars[j], chars[i]];\n    //     }\n    //   }\n    // }\n    // Map over this.state.cards and render a Card component for each card object\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Car Clicker\"), React.createElement(\"p\", {\n        className: \"App-intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Try not to click the same image twice!\")), React.createElement(Score, {\n        total: this.state.score,\n        topScore: this.state.topScore,\n        status: this.state.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.chars.map(function (data) {\n        return React.createElement(Card, {\n          shuffleScoreCard: _this2.shuffleScoreCard,\n          id: data.id,\n          key: data.id,\n          image: data.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/kurtking/working/clickyGame/clicky-app/src/App.js"],"names":["React","Component","Card","chars","Wrapper","Score","App","state","clickedChars","score","topScore","status","shuffleScoreCard","id","sort","Math","random","setState","map","data","image"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP;;IAGMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNJ,MAAAA,KAAK,EAALA,KADM;AAENK,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,KAAK,EAAE,CAHD;AAINC,MAAAA,QAAQ,EAAE,CAJJ;AAKNC,MAAAA,MAAM,EAAC;AALD,K;;UAQRC,gB,GAAmB,UAAAC,EAAE,EAAI;AACzBV,MAAAA,KAAK,CAACW,IAAN,CAAW;AAAA,eAAMC,IAAI,CAACC,MAAL,KAAgB,GAAtB;AAAA,OAAX;;AAEE,YAAKC,QAAL,CAAc;AAAEd,QAAAA,KAAK,EAALA,KAAF;AAASM,QAAAA,KAAK,EAAI,MAAKF,KAAL,CAAWE,KAAX,GAAkB;AAApC,OAAd;AACD,K;;;;;;;AAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAcD;6BACS;AAAA;;AACR,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAFF,CADF,EAOE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAzB;AACO,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAD5B;AAEO,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,MAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAWE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKJ,KAAL,CAAWJ,KAAX,CAAiBe,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACxB,oBAAC,IAAD;AACE,UAAA,gBAAgB,EAAE,MAAI,CAACP,gBADzB;AAEE,UAAA,EAAE,EAAEO,IAAI,CAACN,EAFX;AAGE,UAAA,GAAG,EAAEM,IAAI,CAACN,EAHZ;AAIE,UAAA,KAAK,EAAEM,IAAI,CAACC,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADwB;AAAA,OAAzB,CADH,CAXF,CADF;AAyBD;;;;EAhFiBnB,S;;AAmFlB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Card from \"./components/Card\";\nimport chars from \"./cards.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score\";\nimport './App.css';\n\n\nclass App extends Component {\n  // Setting this.state.pups to the cards json array\n  state = {\n    chars,\n    clickedChars: [],\n    score: 0,\n    topScore: 9,\n    status:\"\"\n    \n  };\n  shuffleScoreCard = id => {\n  chars.sort(() => Math.random() - 0.5);\n\n    this.setState({ chars, score:   this.state.score +1 });\n  };\n\n  //shuffle the pup cards in the browser when clicked\n  // shuffleScoreCard = id => {\n  //   let clickedChars = this.state.clickedChars;\n\n  //   if(clickedChars.includes(id)){\n  //     this.setState({ clickedChars: [], score: 0, status:  \"Game Over! You lost. Click to play again!\" });\n  //     return;\n  //   }else{\n  //     clickedChars.push(id)\n\n  //     if(clickedChars.length === 9){\n  //       this.setState({score: 9, status: \"You Won! Great Job, Smartie! Click to play again!\", clickedChars: []});\n  //       console.log('You Win');\n  //       return;\n  //     }\n\n  //     this.setState({ chars, clickedChars, score: clickedChars.length, status: \" \" });\n\n  //     for (let i = chars.length - 1; i > 0; i--) {\n  //       let j = Math.floor(Math.random() * (i + 1));\n  //       [chars[i], chars[j]] = [chars[j], chars[i]];\n  //     }\n  //   }\n  // }\n\n\n\n\n\n\n\n\n\n\n\n\n\n // Map over this.state.cards and render a Card component for each card object\n render() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-title\">Car Clicker</h1>\n        <p className=\"App-intro\">\n          Try not to click the same image twice!\n        </p>\n      </header>\n      <Score total={this.state.score}\n             topScore={this.state.topScore}\n             status={this.state.status}\n             />\n      <Wrapper>\n        {this.state.chars.map(data => (\n          <Card\n            shuffleScoreCard={this.shuffleScoreCard}\n            id={data.id}\n            key={data.id}\n            image={data.image}\n          />\n        ))}\n      </Wrapper>\n    \n  </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}